{"split":"1","window":{"width":1286,"height":780,"top":-3,"left":-3,"isMaximized":true},"session.current":["/odis.js"],"session.open":{"/odis.js":{"scrollTop":0,"scrollLeft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"lastUse":1448692868577,"undo":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":35}},"text":"/*jslint browser:true, white:true*/"},{"action":"insertText","range":{"start":{"row":0,"column":35},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":50,"column":0}},"lines":["/*global window*/","","(function () {","    'use strict';","    // we'll attach odis to window later","    var odis = {","        debounce: function (func, delay) {","            // set a reasonable timeout for debouncing","            delay = delay || 250;","            var funcTimeoutId;","            return function () {","                // keep clearing the function","                // until it stops being called","                clearTimeout(funcTimeoutId);","                funcTimeoutId = setTimeout(function () {","                    func.call();","                }, delay);","            };","        },","        throttle: function (func, delay) {","            // nod to Douglas Adams  ;^)","            delay = delay || 42;","            var waiting = false,","                funcTimeoutId;","            return function () {","                if (!waiting) {","                    // very similar to our debounce,","                    // but the waiting var allows the","                    // call to execute multiple times","                    // while being called","                    waiting = true;","                    clearTimeout(funcTimeoutId);","                    funcTimeoutId = setTimeout(function () {","                        func.call();","                        waiting = false;","                    }, delay);","                }","            };","        }","    };","","    // set up nice shortcuts because no one likes typing","    odis.thro = odis.throttle;","    odis.t = odis.thro;","    odis.debo = odis.debounce;","    odis.d = odis.debo;","","    // attach odis globally","    window.odis = odis;"]},{"action":"insertText","range":{"start":{"row":50,"column":0},"end":{"row":50,"column":5}},"text":"}());"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":5},"end":{"row":51,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":0,"column":0},"end":{"row":51,"column":0}},"nl":"\n","lines":["/*jslint browser:true, white:true*/","/*global window*/","","(function () {","    'use strict';","    // we'll attach odis to window later","    var odis = {","        debounce: function (func, delay) {","            // set a reasonable timeout for debouncing","            delay = delay || 250;","            var funcTimeoutId;","            return function () {","                // keep clearing the function","                // until it stops being called","                clearTimeout(funcTimeoutId);","                funcTimeoutId = setTimeout(function () {","                    func.call();","                }, delay);","            };","        },","        throttle: function (func, delay) {","            // nod to Douglas Adams  ;^)","            delay = delay || 42;","            var waiting = false,","                funcTimeoutId;","            return function () {","                if (!waiting) {","                    // very similar to our debounce,","                    // but the waiting var allows the","                    // call to execute multiple times","                    // while being called","                    waiting = true;","                    clearTimeout(funcTimeoutId);","                    funcTimeoutId = setTimeout(function () {","                        func.call();","                        waiting = false;","                    }, delay);","                }","            };","        }","    };","","    // set up nice shortcuts because no one likes typing","    odis.thro = odis.throttle;","    odis.t = odis.thro;","    odis.debo = odis.debounce;","    odis.d = odis.debo;","","    // attach odis globally","    window.odis = odis;","}());"]},{"action":"insertText","range":{"start":{"row":0,"column":0},"end":{"row":0,"column":35}},"text":"/*jslint browser:true, white:true*/"},{"action":"insertText","range":{"start":{"row":0,"column":35},"end":{"row":1,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":1,"column":0},"end":{"row":50,"column":0}},"lines":["/*global window*/","","(function() {","  'use strict';","  // we'll attach odis to window later","  var odis = {","    debounce: function(func, delay) {","      // set a reasonable timeout for debouncing","      delay = delay || 250;","      var funcTimeoutId;","      return function() {","        // keep clearing the function","        // until it stops being called","        clearTimeout(funcTimeoutId);","        funcTimeoutId = setTimeout(function() {","          func.call();","        }, delay);","      };","    },","    throttle: function(func, delay) {","      // nod to Douglas Adams  ;^)","      delay = delay || 42;","      var waiting = false,","        funcTimeoutId;","      return function() {","        if (!waiting) {","          // very similar to our debounce,","          // but the waiting var allows the","          // call to execute multiple times","          // while being called","          waiting = true;","          clearTimeout(funcTimeoutId);","          funcTimeoutId = setTimeout(function() {","            func.call();","            waiting = false;","          }, delay);","        }","      };","    }","  };","","  // set up nice shortcuts because no one likes typing","  odis.thro = odis.throttle;","  odis.t = odis.thro;","  odis.debo = odis.debounce;","  odis.d = odis.debo;","","  // attach odis globally","  window.odis = odis;"]},{"action":"insertText","range":{"start":{"row":50,"column":0},"end":{"row":50,"column":5}},"text":"}());"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":50,"column":5},"end":{"row":51,"column":0}},"text":"\n"}]}]],"redo":[]}}}